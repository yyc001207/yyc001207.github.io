import{_ as p,r as o,o as i,c as l,a as s,b as n,d as t,e}from"./app-3d6b8d01.js";const c={},r=e('<h1 id="vue3模板项目搭建" tabindex="-1"><a class="header-anchor" href="#vue3模板项目搭建" aria-hidden="true">#</a> vue3模板项目搭建</h1><h2 id="一、前言" tabindex="-1"><a class="header-anchor" href="#一、前言" aria-hidden="true">#</a> 一、前言</h2><h3 id="_1-1-项目初始化" tabindex="-1"><a class="header-anchor" href="#_1-1-项目初始化" aria-hidden="true">#</a> 1.1 项目初始化</h3><p>从 0 开始搭建一个 vue3 模板项目。一个项目要有统一的规范，需要使用 eslint+stylelint+prettier 来对我们的代码质量做检测和修复，需要使用 husky 来做 commit 拦截，需要使用 commitlint 来统一提交规范，需要使用 preinstall 来统一包管理工具。</p><p>下面我们就用这一套规范来初始化我们的项目，集成一个规范的模版。</p>',5),u={href:"https://docs.spicyboy.cn/",target:"_blank",rel:"noopener noreferrer"},d={href:"https://github.com/HalseySpicy/Geeker-Admin",target:"_blank",rel:"noopener noreferrer"},k={href:"https://docs.spicyboy.cn/components/proTable.html",target:"_blank",rel:"noopener noreferrer"},v=e(`<h3 id="_1-2-环境准备" tabindex="-1"><a class="header-anchor" href="#_1-2-环境准备" aria-hidden="true">#</a> 1.2 环境准备</h3><ul><li>node v16.x</li><li>pnpm 8.6.2</li><li>vscode</li></ul><h2 id="二、项目配置" tabindex="-1"><a class="header-anchor" href="#二、项目配置" aria-hidden="true">#</a> 二、项目配置</h2><h3 id="_2-1-限制包管理器及版本" tabindex="-1"><a class="header-anchor" href="#_2-1-限制包管理器及版本" aria-hidden="true">#</a> 2.1 限制包管理器及版本</h3><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code>	<span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
		<span class="token property">&quot;preinstall&quot;</span><span class="token operator">:</span> <span class="token string">&quot;npx only-allow pnpm&quot;</span>
	<span class="token punctuation">}</span><span class="token punctuation">,</span>
		<span class="token property">&quot;engines&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
		<span class="token property">&quot;node&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&gt;=16.x&quot;</span><span class="token punctuation">,</span>
		<span class="token property">&quot;pnpm&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&gt;=8.6.2&quot;</span>
	<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-2-代码格式化工具-prettier" tabindex="-1"><a class="header-anchor" href="#_2-2-代码格式化工具-prettier" aria-hidden="true">#</a> 2.2 代码格式化工具（Prettier）</h3><h4 id="_2-2-1-下载-prettier-相关依赖" tabindex="-1"><a class="header-anchor" href="#_2-2-1-下载-prettier-相关依赖" aria-hidden="true">#</a> 2.2.1 下载 prettier 相关依赖：</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">pnpm</span> <span class="token function">install</span> prettier <span class="token parameter variable">-D</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_2-2-2-安装-vscode-插件-prettier" tabindex="-1"><a class="header-anchor" href="#_2-2-2-安装-vscode-插件-prettier" aria-hidden="true">#</a> 2.2.2 安装 Vscode 插件（Prettier）</h4><h4 id="_2-2-3-配置-prettier" tabindex="-1"><a class="header-anchor" href="#_2-2-3-配置-prettier" aria-hidden="true">#</a> 2.2.3 配置 Prettier</h4><p>新建.prettierrc.cjs</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// @see: https://www.prettier.cn</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token comment">// 指定最大换行长度</span>
  <span class="token literal-property property">printWidth</span><span class="token operator">:</span> <span class="token number">130</span><span class="token punctuation">,</span>
  <span class="token comment">// 缩进制表符宽度 | 空格数</span>
  <span class="token literal-property property">tabWidth</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
  <span class="token comment">// 使用制表符而不是空格缩进行 (true：制表符，false：空格)</span>
  <span class="token literal-property property">useTabs</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  <span class="token comment">// 结尾不用分号 (true：有，false：没有)</span>
  <span class="token literal-property property">semi</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  <span class="token comment">// 使用单引号 (true：单引号，false：双引号)</span>
  <span class="token literal-property property">singleQuote</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  <span class="token comment">// 在对象字面量中决定是否将属性名用引号括起来 可选值 &quot;&lt;as-needed|consistent|preserve&gt;&quot;</span>
  <span class="token literal-property property">quoteProps</span><span class="token operator">:</span> <span class="token string">&quot;as-needed&quot;</span><span class="token punctuation">,</span>
  <span class="token comment">// 在JSX中使用单引号而不是双引号 (true：单引号，false：双引号)</span>
  <span class="token literal-property property">jsxSingleQuote</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  <span class="token comment">// 多行时尽可能打印尾随逗号 可选值&quot;&lt;none|es5|all&gt;&quot;</span>
  <span class="token literal-property property">trailingComma</span><span class="token operator">:</span> <span class="token string">&quot;none&quot;</span><span class="token punctuation">,</span>
  <span class="token comment">// 在对象，数组括号与文字之间加空格 &quot;{ foo: bar }&quot; (true：有，false：没有)</span>
  <span class="token literal-property property">bracketSpacing</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token comment">// 将 &gt; 多行元素放在最后一行的末尾，而不是单独放在下一行 (true：放末尾，false：单独一行)</span>
  <span class="token literal-property property">bracketSameLine</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  <span class="token comment">// (x) =&gt; {} 箭头函数参数只有一个时是否要有小括号 (avoid：省略括号，always：不省略括号)</span>
  <span class="token literal-property property">arrowParens</span><span class="token operator">:</span> <span class="token string">&quot;avoid&quot;</span><span class="token punctuation">,</span>
  <span class="token comment">// 指定要使用的解析器，不需要写文件开头的 @prettier</span>
  <span class="token literal-property property">requirePragma</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  <span class="token comment">// 可以在文件顶部插入一个特殊标记，指定该文件已使用 Prettier 格式化</span>
  <span class="token literal-property property">insertPragma</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  <span class="token comment">// 用于控制文本是否应该被换行以及如何进行换行</span>
  <span class="token literal-property property">proseWrap</span><span class="token operator">:</span> <span class="token string">&quot;preserve&quot;</span><span class="token punctuation">,</span>
  <span class="token comment">// 在html中空格是否是敏感的 &quot;css&quot; - 遵守 CSS 显示属性的默认值， &quot;strict&quot; - 空格被认为是敏感的 ，&quot;ignore&quot; - 空格被认为是不敏感的</span>
  <span class="token literal-property property">htmlWhitespaceSensitivity</span><span class="token operator">:</span> <span class="token string">&quot;css&quot;</span><span class="token punctuation">,</span>
  <span class="token comment">// 控制在 Vue 单文件组件中 &lt;script&gt; 和 &lt;style&gt; 标签内的代码缩进方式</span>
  <span class="token literal-property property">vueIndentScriptAndStyle</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  <span class="token comment">// 换行符使用 lf 结尾是 可选值 &quot;&lt;auto|lf|crlf|cr&gt;&quot;</span>
  <span class="token literal-property property">endOfLine</span><span class="token operator">:</span> <span class="token string">&quot;auto&quot;</span><span class="token punctuation">,</span>
  <span class="token comment">// 这两个选项可用于格式化以给定字符偏移量（分别包括和不包括）开始和结束的代码 (rangeStart：开始，rangeEnd：结束)</span>
  <span class="token literal-property property">rangeStart</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
  <span class="token literal-property property">rangeEnd</span><span class="token operator">:</span> <span class="token number">Infinity</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>新建忽略检查配置文件.prettierignore</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>/dist/*
.local
/node_modules/**

**/*.svg
**/*.sh

/public/*
stats.html

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-3-代码规范工具-eslint" tabindex="-1"><a class="header-anchor" href="#_2-3-代码规范工具-eslint" aria-hidden="true">#</a> 2.3 代码规范工具（ESLint）</h3><table><thead><tr><th>依赖</th><th>作用描述</th></tr></thead><tbody><tr><td>eslint</td><td>ESLint 核心库</td></tr><tr><td>eslint-config-prettier</td><td>关掉所有和 Prettier 冲突的 ESLint 的配置</td></tr><tr><td>eslint-plugin-prettier</td><td>将 Prettier 的 rules 以插件的形式加入到 ESLint 里面</td></tr><tr><td>eslint-plugin-vue</td><td>为 Vue 使用 ESlint 的插件</td></tr><tr><td>@typescript-eslint/eslint-plugin</td><td>ESLint 插件，包含了各类定义好的检测 TypeScript 代码的规范</td></tr><tr><td>@typescript-eslint/parser</td><td>ESLint 的解析器，用于解析 TypeScript，从而检查和规范 TypeScript 代码</td></tr></tbody></table><h4 id="_2-2-1-下载相关依赖" tabindex="-1"><a class="header-anchor" href="#_2-2-1-下载相关依赖" aria-hidden="true">#</a> 2.2.1 下载相关依赖</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">pnpm</span> <span class="token function">install</span> eslint eslint-config-prettier eslint-plugin-prettier eslint-plugin-vue @typescript-eslint/eslint-plugin @typescript-eslint/parser <span class="token parameter variable">-D</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_2-2-1-安装-vscode-插件-eslint" tabindex="-1"><a class="header-anchor" href="#_2-2-1-安装-vscode-插件-eslint" aria-hidden="true">#</a> 2.2.1 安装 Vscode 插件（ESLint)</h4><h4 id="_2-2-3-配置-eslint-eslintrc-cjs" tabindex="-1"><a class="header-anchor" href="#_2-2-3-配置-eslint-eslintrc-cjs" aria-hidden="true">#</a> 2.2.3 配置 ESLint（.eslintrc.cjs）</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// @see: http://eslint.cn</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">root</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token literal-property property">env</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">browser</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token literal-property property">node</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token literal-property property">es6</span><span class="token operator">:</span> <span class="token boolean">true</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// 指定如何解析语法</span>
  <span class="token literal-property property">parser</span><span class="token operator">:</span> <span class="token string">&quot;vue-eslint-parser&quot;</span><span class="token punctuation">,</span>
  <span class="token comment">// 优先级低于 parse 的语法解析配置</span>
  <span class="token literal-property property">parserOptions</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">parser</span><span class="token operator">:</span> <span class="token string">&quot;@typescript-eslint/parser&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">ecmaVersion</span><span class="token operator">:</span> <span class="token number">2020</span><span class="token punctuation">,</span>
    <span class="token literal-property property">sourceType</span><span class="token operator">:</span> <span class="token string">&quot;module&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">jsxPragma</span><span class="token operator">:</span> <span class="token string">&quot;React&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">ecmaFeatures</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">jsx</span><span class="token operator">:</span> <span class="token boolean">true</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// 继承某些已有的规则</span>
  <span class="token keyword">extends</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;plugin:vue/vue3-recommended&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;plugin:@typescript-eslint/recommended&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;plugin:prettier/recommended&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token doc-comment comment">/**
   * &quot;off&quot; 或 0    ==&gt;  关闭规则
   * &quot;warn&quot; 或 1   ==&gt;  打开的规则作为警告（不影响代码执行）
   * &quot;error&quot; 或 2  ==&gt;  规则作为一个错误（代码不能执行，界面报错）
   */</span>
  <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token comment">// eslint (http://eslint.cn/docs/rules)</span>
    <span class="token string-property property">&quot;no-var&quot;</span><span class="token operator">:</span> <span class="token string">&quot;error&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 要求使用 let 或 const 而不是 var</span>
    <span class="token string-property property">&quot;no-multiple-empty-lines&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;error&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">max</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// 不允许多个空行</span>
    <span class="token string-property property">&quot;prefer-const&quot;</span><span class="token operator">:</span> <span class="token string">&quot;off&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 使用 let 关键字声明但在初始分配后从未重新分配的变量，要求使用 const</span>
    <span class="token string-property property">&quot;no-use-before-define&quot;</span><span class="token operator">:</span> <span class="token string">&quot;off&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 禁止在 函数/类/变量 定义之前使用它们</span>

    <span class="token comment">// typeScript (https://typescript-eslint.io/rules)</span>
    <span class="token string-property property">&quot;@typescript-eslint/no-unused-vars&quot;</span><span class="token operator">:</span> <span class="token string">&quot;error&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 禁止定义未使用的变量</span>
    <span class="token string-property property">&quot;@typescript-eslint/prefer-ts-expect-error&quot;</span><span class="token operator">:</span> <span class="token string">&quot;error&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 禁止使用 @ts-ignore</span>
    <span class="token string-property property">&quot;@typescript-eslint/ban-ts-comment&quot;</span><span class="token operator">:</span> <span class="token string">&quot;error&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 禁止 @ts-&lt;directive&gt; 使用注释或要求在指令后进行描述</span>
    <span class="token string-property property">&quot;@typescript-eslint/no-inferrable-types&quot;</span><span class="token operator">:</span> <span class="token string">&quot;off&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 可以轻松推断的显式类型可能会增加不必要的冗长</span>
    <span class="token string-property property">&quot;@typescript-eslint/no-namespace&quot;</span><span class="token operator">:</span> <span class="token string">&quot;off&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 禁止使用自定义 TypeScript 模块和命名空间</span>
    <span class="token string-property property">&quot;@typescript-eslint/no-explicit-any&quot;</span><span class="token operator">:</span> <span class="token string">&quot;off&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 禁止使用 any 类型</span>
    <span class="token string-property property">&quot;@typescript-eslint/ban-types&quot;</span><span class="token operator">:</span> <span class="token string">&quot;off&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 禁止使用特定类型</span>
    <span class="token string-property property">&quot;@typescript-eslint/no-var-requires&quot;</span><span class="token operator">:</span> <span class="token string">&quot;off&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 允许使用 require() 函数导入模块</span>
    <span class="token string-property property">&quot;@typescript-eslint/no-empty-function&quot;</span><span class="token operator">:</span> <span class="token string">&quot;off&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 禁止空函数</span>
    <span class="token string-property property">&quot;@typescript-eslint/no-non-null-assertion&quot;</span><span class="token operator">:</span> <span class="token string">&quot;off&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 不允许使用后缀运算符的非空断言(!)</span>

    <span class="token comment">// vue (https://eslint.vuejs.org/rules)</span>
    <span class="token string-property property">&quot;vue/script-setup-uses-vars&quot;</span><span class="token operator">:</span> <span class="token string">&quot;error&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 防止&lt;script setup&gt;使用的变量&lt;template&gt;被标记为未使用，此规则仅在启用该no-unused-vars规则时有效</span>
    <span class="token string-property property">&quot;vue/v-slot-style&quot;</span><span class="token operator">:</span> <span class="token string">&quot;error&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 强制执行 v-slot 指令样式</span>
    <span class="token string-property property">&quot;vue/no-mutating-props&quot;</span><span class="token operator">:</span> <span class="token string">&quot;error&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 不允许改变组件 prop</span>
    <span class="token string-property property">&quot;vue/custom-event-name-casing&quot;</span><span class="token operator">:</span> <span class="token string">&quot;error&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 为自定义事件名称强制使用特定大小写</span>
    <span class="token string-property property">&quot;vue/html-closing-bracket-newline&quot;</span><span class="token operator">:</span> <span class="token string">&quot;error&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 在标签的右括号之前要求或禁止换行</span>
    <span class="token string-property property">&quot;vue/attribute-hyphenation&quot;</span><span class="token operator">:</span> <span class="token string">&quot;error&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 对模板中的自定义组件强制执行属性命名样式：my-prop=&quot;prop&quot;</span>
    <span class="token string-property property">&quot;vue/attributes-order&quot;</span><span class="token operator">:</span> <span class="token string">&quot;off&quot;</span><span class="token punctuation">,</span> <span class="token comment">// vue api使用顺序，强制执行属性顺序</span>
    <span class="token string-property property">&quot;vue/no-v-html&quot;</span><span class="token operator">:</span> <span class="token string">&quot;off&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 禁止使用 v-html</span>
    <span class="token string-property property">&quot;vue/require-default-prop&quot;</span><span class="token operator">:</span> <span class="token string">&quot;off&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 此规则要求为每个 prop 为必填时，必须提供默认值</span>
    <span class="token string-property property">&quot;vue/multi-word-component-names&quot;</span><span class="token operator">:</span> <span class="token string">&quot;off&quot;</span> <span class="token comment">// 要求组件名称始终为 “-” 链接的单词</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-2-4-忽略-eslint-检查-eslintignore" tabindex="-1"><a class="header-anchor" href="#_2-2-4-忽略-eslint-检查-eslintignore" aria-hidden="true">#</a> 2.2.4 忽略 eslint 检查(.eslintignore)</h4><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>*.sh
node_modules
*.md
*.woff
*.ttf
.vscode
.idea
dist
/public
/docs
.husky
.local
/bin
/src/mock/*
stats.html

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-4-样式规范工具-stylelint" tabindex="-1"><a class="header-anchor" href="#_2-4-样式规范工具-stylelint" aria-hidden="true">#</a> 2.4 样式规范工具（StyleLint）</h3><table><thead><tr><th>依赖</th><th>作用描述</th></tr></thead><tbody><tr><td>stylelint</td><td>stylelint 核心库</td></tr><tr><td>stylelint-config-html</td><td>Stylelint 的可共享 HTML（和类似 HTML）配置，捆绑 postcss-html 并对其进行配置。</td></tr><tr><td>stylelint-config-recommended-scss</td><td>扩展 stylelint-config-recommended 共享配置，并为 SCSS 配置其规则</td></tr><tr><td>stylelint-config-recommended-vue</td><td>扩展 stylelint-config-recommended 共享配置，并为 Vue 配置其规则</td></tr><tr><td>stylelint-config-standard</td><td>打开额外的规则来执行在规范和一些 CSS 样式指南中发现的通用约定，包括：惯用 CSS 原则，谷歌的 CSS 样式指南，Airbnb 的样式指南，和 @mdo 的代码指南。</td></tr><tr><td>stylelint-config-standard-scss</td><td>扩展 stylelint-config-standard 共享配置，并为 SCSS 配置其规则</td></tr><tr><td>stylelint-config-recess-order</td><td>属性的排序（插件包）</td></tr><tr><td>postcss</td><td>postcss-html 的依赖包</td></tr><tr><td>postcss-html</td><td>用于解析 HTML（和类似 HTML）的 PostCSS 语法</td></tr></tbody></table><h4 id="_2-4-1stylelint-相关依赖" tabindex="-1"><a class="header-anchor" href="#_2-4-1stylelint-相关依赖" aria-hidden="true">#</a> 2.4.1StyleLint 相关依赖</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">pnpm</span> <span class="token function">install</span> stylelint stylelint-config-html stylelint-config-recommended-scss stylelint-config-recommended-vue stylelint-config-standard stylelint-config-standard-scss stylelint-config-recess-order postcss postcss-html <span class="token parameter variable">-D</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_2-4-2-安装-vscode-插件-stylelint" tabindex="-1"><a class="header-anchor" href="#_2-4-2-安装-vscode-插件-stylelint" aria-hidden="true">#</a> 2.4.2 安装 Vscode 插件（StyleLint）</h4><h4 id="_2-4-3-在目录的-vscode-文件夹下新建-settings-json" tabindex="-1"><a class="header-anchor" href="#_2-4-3-在目录的-vscode-文件夹下新建-settings-json" aria-hidden="true">#</a> 2.4.3 在目录的 .vscode 文件夹下新建 settings.json</h4><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;editor.formatOnSave&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token property">&quot;editor.codeActionsOnSave&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;source.fixAll.stylelint&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;stylelint.enable&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token property">&quot;stylelint.validate&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;css&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;less&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;postcss&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;scss&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;vue&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;sass&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;html&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token property">&quot;files.eol&quot;</span><span class="token operator">:</span> <span class="token string">&quot;\\n&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-4-4-配置-stylelint-stylelintrc-cjs" tabindex="-1"><a class="header-anchor" href="#_2-4-4-配置-stylelint-stylelintrc-cjs" aria-hidden="true">#</a> 2.4.4 配置 StyleLint（.stylelintrc.cjs）</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// @see: https://stylelint.io</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">root</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token comment">// 继承某些已有的规则</span>
  <span class="token keyword">extends</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token string">&quot;stylelint-config-standard&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 配置 stylelint 拓展插件</span>
    <span class="token string">&quot;stylelint-config-html/vue&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 配置 vue 中 template 样式格式化</span>
    <span class="token string">&quot;stylelint-config-standard-scss&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 配置 stylelint scss 插件</span>
    <span class="token string">&quot;stylelint-config-recommended-vue/scss&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 配置 vue 中 scss 样式格式化</span>
    <span class="token string">&quot;stylelint-config-recess-order&quot;</span> <span class="token comment">// 配置 stylelint css 属性书写顺序插件,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token literal-property property">overrides</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token comment">// 扫描 .vue/html 文件中的 &lt;style&gt; 标签内的样式</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">files</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;**/*.{vue,html}&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token literal-property property">customSyntax</span><span class="token operator">:</span> <span class="token string">&quot;postcss-html&quot;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token string-property property">&quot;function-url-quotes&quot;</span><span class="token operator">:</span> <span class="token string">&quot;always&quot;</span><span class="token punctuation">,</span> <span class="token comment">// URL 的引号 &quot;always(必须加上引号)&quot;|&quot;never(没有引号)&quot;</span>
    <span class="token string-property property">&quot;color-hex-length&quot;</span><span class="token operator">:</span> <span class="token string">&quot;long&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 指定 16 进制颜色的简写或扩写 &quot;short(16进制简写)&quot;|&quot;long(16进制扩写)&quot;</span>
    <span class="token string-property property">&quot;rule-empty-line-before&quot;</span><span class="token operator">:</span> <span class="token string">&quot;never&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 要求或禁止在规则之前的空行 &quot;always(规则之前必须始终有一个空行)&quot;|&quot;never(规则前绝不能有空行)&quot;|&quot;always-multi-line(多行规则之前必须始终有一个空行)&quot;|&quot;never-multi-line(多行规则之前绝不能有空行)&quot;</span>
    <span class="token string-property property">&quot;font-family-no-missing-generic-family-keyword&quot;</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token comment">// 禁止在字体族名称列表中缺少通用字体族关键字</span>
    <span class="token string-property property">&quot;scss/at-import-partial-extension&quot;</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token comment">// 解决不能使用 @import 引入 scss 文件</span>
    <span class="token string-property property">&quot;property-no-unknown&quot;</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token comment">// 禁止未知的属性</span>
    <span class="token string-property property">&quot;no-empty-source&quot;</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token comment">// 禁止空源码</span>
    <span class="token string-property property">&quot;selector-class-pattern&quot;</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token comment">// 强制选择器类名的格式</span>
    <span class="token string-property property">&quot;value-no-vendor-prefix&quot;</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token comment">// 关闭 vendor-prefix (为了解决多行省略 -webkit-box)</span>
    <span class="token string-property property">&quot;no-descending-specificity&quot;</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token comment">// 不允许较低特异性的选择器出现在覆盖较高特异性的选择器</span>
    <span class="token string-property property">&quot;value-keyword-case&quot;</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token comment">// 解决在 scss 中使用 v-bind 大写单词报错</span>
    <span class="token string-property property">&quot;selector-pseudo-class-no-unknown&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token boolean">true</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">ignorePseudoClasses</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;global&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;v-deep&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;deep&quot;</span><span class="token punctuation">]</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">]</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">ignoreFiles</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;**/*.js&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;**/*.jsx&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;**/*.tsx&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;**/*.ts&quot;</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-4-5-忽略-stylelint-检查-stylelintignore" tabindex="-1"><a class="header-anchor" href="#_2-4-5-忽略-stylelint-检查-stylelintignore" aria-hidden="true">#</a> 2.4.5 忽略 StyleLint 检查(.stylelintignore)</h4><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>/dist/*
/public/*
public/*
stats.html

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-5editorconfig-配置" tabindex="-1"><a class="header-anchor" href="#_2-5editorconfig-配置" aria-hidden="true">#</a> 2.5EditorConfig 配置</h3><h4 id="_2-5-1-简介" tabindex="-1"><a class="header-anchor" href="#_2-5-1-简介" aria-hidden="true">#</a> 2.5.1 简介</h4><ul><li><strong>EditorConfig</strong> 帮助开发人员在 <strong>不同的编辑器</strong> 和 <strong>IDE</strong> 之间定义和维护一致的编码样式。</li></ul><h4 id="_2-5-2-安装-vscode-插件-editorconfig" tabindex="-1"><a class="header-anchor" href="#_2-5-2-安装-vscode-插件-editorconfig" aria-hidden="true">#</a> 2.5.2 安装 VsCode 插件（EditorConfig ）</h4><h3 id="_2-5-3-配置-editorconfig-editorconfig" tabindex="-1"><a class="header-anchor" href="#_2-5-3-配置-editorconfig-editorconfig" aria-hidden="true">#</a> 2.5.3 配置 EditorConfig（.editorconfig）</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code># @see: http://editorconfig.org

root = true

[*] # 表示所有文件适用
charset = utf-8 # 设置文件字符集为 utf-8
end_of_line = lf # 控制换行类型(lf | cr | crlf)
insert_final_newline = true # 始终在文件末尾插入一个新行
indent_style = space # 缩进风格（tab | space）
indent_size = 2 # 缩进大小
max_line_length = 130 # 最大行长度

[*.md] # 表示仅对 md 文件适用以下规则
max_line_length = off # 关闭最大行长度限制
trim_trailing_whitespace = false # 关闭末尾空格修剪
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="三、git-流程规范配置" tabindex="-1"><a class="header-anchor" href="#三、git-流程规范配置" aria-hidden="true">#</a> 三、Git 流程规范配置</h2><table><thead><tr><th>依赖</th><th>作用描述</th></tr></thead><tbody><tr><td>husky</td><td>操作<strong>git</strong> 钩子的工具（在 <strong>git xx</strong> 之前执行某些命令）</td></tr><tr><td>lint-staged</td><td>在提交之前进行<strong>eslint</strong> 校验，并使用 <strong>prettier</strong> 格式化本地暂存区的代码，</td></tr><tr><td>@commitlint/cli</td><td>校验<strong>git commit</strong> 信息是否符合规范，保证团队的一致性</td></tr><tr><td>@commitlint/config-conventional</td><td><strong>Anglar</strong> 的提交规范</td></tr><tr><td>czg</td><td>交互式命令行工具生成标准化的 git commit message</td></tr><tr><td>cz-git</td><td>一款工程性更强，轻量级，高度自定义，标准输出格式的<strong>commitize</strong> 适配器</td></tr></tbody></table><h3 id="_3-1husky-操作-git-钩子的工具" tabindex="-1"><a class="header-anchor" href="#_3-1husky-操作-git-钩子的工具" aria-hidden="true">#</a> 3.1husky（操作 git 钩子的工具）</h3><p>安装</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">pnpm</span> <span class="token function">install</span> husky <span class="token parameter variable">-D</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>使用</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 编辑 package.json &gt; prepare 脚本并运行一次</span>

<span class="token function">pnpm</span> set-script prepare <span class="token string">&quot;husky install&quot;</span>
<span class="token function">pnpm</span> prepare
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-2-lint-staged-本地暂存代码检查工具" tabindex="-1"><a class="header-anchor" href="#_3-2-lint-staged-本地暂存代码检查工具" aria-hidden="true">#</a> 3.2 lint-staged（本地暂存代码检查工具）</h3><p>安装</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">pnpm</span> <span class="token function">install</span> lint-staged <span class="token parameter variable">--D</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p><strong>添加 ESlint Hook（在.husky 文件夹下添加 pre-commit 文件）：</strong></p></blockquote><blockquote><p><strong>作用：通过钩子函数，判断提交的代码是否符合规范，并使用 prettier 格式化代码</strong></p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>npx husky <span class="token function">add</span> .husky/pre-commit <span class="token string">&quot;pnpm run lint:lint-staged&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>新增 <strong>lint-staged.config.cjs</strong> 文件：</p></blockquote><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token string-property property">&quot;*.{js,jsx,ts,tsx}&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;eslint --fix&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;prettier --write&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token string-property property">&quot;{!(package)*.json,*.code-snippets,.!(browserslist)*rc}&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;prettier --write--parser json&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token string-property property">&quot;package.json&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;prettier --write&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token string-property property">&quot;*.vue&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;eslint --fix&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;prettier --write&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;stylelint --fix&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token string-property property">&quot;*.{scss,less,styl,html}&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;stylelint --fix&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;prettier --write&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token string-property property">&quot;*.md&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;prettier --write&quot;</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-3commitlint-commit-信息校验工具-不符合则报错" tabindex="-1"><a class="header-anchor" href="#_3-3commitlint-commit-信息校验工具-不符合则报错" aria-hidden="true">#</a> 3.3commitlint（commit 信息校验工具，不符合则报错）</h3><blockquote><p><strong>安装：</strong></p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">pnpm</span> <span class="token function">install</span> @commitlint/cli @commitlint/config-conventional <span class="token parameter variable">-D</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p><strong>配置命令（在.husky 文件夹下添加 commit-msg 文件）：</strong></p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>npx husky <span class="token function">add</span> .husky/commit-msg <span class="token string">&#39;npx --no-install commitlint --edit &quot;$1&quot;&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_3-4commitizen-基于-node-js-的-git-commit-命令行工具-生成标准化的-message" tabindex="-1"><a class="header-anchor" href="#_3-4commitizen-基于-node-js-的-git-commit-命令行工具-生成标准化的-message" aria-hidden="true">#</a> 3.4commitizen（基于 Node.js 的 git commit 命令行工具，生成标准化的 message）</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>// 安装 czg，如此一来可以快速使用 czg 命令进行启动。
<span class="token function">pnpm</span> <span class="token function">install</span> czg <span class="token parameter variable">-D</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-5cz-git" tabindex="-1"><a class="header-anchor" href="#_3-5cz-git" aria-hidden="true">#</a> 3.5cz-git</h3><blockquote><p><strong>指定提交文字规范，一款工程性更强，高度自定义，标准输出格式的 commitizen 适配器</strong></p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">pnpm</span> <span class="token function">install</span> cz-git <span class="token parameter variable">-D</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p><strong>配置 package.json：</strong></p></blockquote><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token property">&quot;config&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
  <span class="token property">&quot;commitizen&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;path&quot;</span><span class="token operator">:</span> <span class="token string">&quot;node_modules/cz-git&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><strong>新建 commitlint.config.js 文件：</strong></p></blockquote><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// @see: https://cz-git.qbenben.com/zh/guide</span>
<span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;fs&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;path&quot;</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> scopes <span class="token operator">=</span> fs
  <span class="token punctuation">.</span><span class="token function">readdirSync</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&quot;src&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">withFileTypes</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">dirent</span> <span class="token operator">=&gt;</span> dirent<span class="token punctuation">.</span><span class="token function">isDirectory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">dirent</span> <span class="token operator">=&gt;</span> dirent<span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">s$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token doc-comment comment">/** <span class="token keyword">@type</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;cz-git&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>UserConfig<span class="token punctuation">}</span></span> */</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">ignores</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token parameter">commit</span> <span class="token operator">=&gt;</span> commit<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&quot;init&quot;</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token keyword">extends</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;@commitlint/config-conventional&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token comment">// @see: https://commitlint.js.org/#/reference-rules</span>
    <span class="token string-property property">&quot;body-leading-blank&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&quot;always&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;footer-leading-blank&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&quot;always&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;header-max-length&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&quot;always&quot;</span><span class="token punctuation">,</span> <span class="token number">108</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;subject-empty&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&quot;never&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;type-empty&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&quot;never&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;subject-case&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;type-enum&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token number">2</span><span class="token punctuation">,</span>
      <span class="token string">&quot;always&quot;</span><span class="token punctuation">,</span>
      <span class="token punctuation">[</span>
        <span class="token string">&quot;feat&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&quot;fix&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&quot;docs&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&quot;style&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&quot;refactor&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&quot;perf&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&quot;test&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&quot;build&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&quot;ci&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&quot;chore&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&quot;revert&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&quot;wip&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&quot;workflow&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&quot;types&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&quot;release&quot;</span>
      <span class="token punctuation">]</span>
    <span class="token punctuation">]</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">prompt</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">messages</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&quot;Select the type of change that you&#39;re committing:&quot;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">scope</span><span class="token operator">:</span> <span class="token string">&quot;Denote the SCOPE of this change (optional):&quot;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">customScope</span><span class="token operator">:</span> <span class="token string">&quot;Denote the SCOPE of this change:&quot;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">subject</span><span class="token operator">:</span> <span class="token string">&quot;Write a SHORT, IMPERATIVE tense description of the change:\\n&quot;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">body</span><span class="token operator">:</span> <span class="token string">&#39;Provide a LONGER description of the change (optional). Use &quot;|&quot; to break new line:\\n&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">breaking</span><span class="token operator">:</span> <span class="token string">&#39;List any BREAKING CHANGES (optional). Use &quot;|&quot; to break new line:\\n&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">footerPrefixsSelect</span><span class="token operator">:</span> <span class="token string">&quot;Select the ISSUES type of changeList by this change (optional):&quot;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">customFooterPrefixs</span><span class="token operator">:</span> <span class="token string">&quot;Input ISSUES prefix:&quot;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">footer</span><span class="token operator">:</span> <span class="token string">&quot;List any ISSUES by this change. E.g.: #31, #34:\\n&quot;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">confirmCommit</span><span class="token operator">:</span> <span class="token string">&quot;Are you sure you want to proceed with the commit above?&quot;</span>
      <span class="token comment">// 中文版</span>
      <span class="token comment">// type: &quot;选择你要提交的类型 :&quot;,</span>
      <span class="token comment">// scope: &quot;选择一个提交范围（可选）:&quot;,</span>
      <span class="token comment">// customScope: &quot;请输入自定义的提交范围 :&quot;,</span>
      <span class="token comment">// subject: &quot;填写简短精炼的变更描述 :\\n&quot;,</span>
      <span class="token comment">// body: &#39;填写更加详细的变更描述（可选）。使用 &quot;|&quot; 换行 :\\n&#39;,</span>
      <span class="token comment">// breaking: &#39;列举非兼容性重大的变更（可选）。使用 &quot;|&quot; 换行 :\\n&#39;,</span>
      <span class="token comment">// footerPrefixsSelect: &quot;选择关联issue前缀（可选）:&quot;,</span>
      <span class="token comment">// customFooterPrefixs: &quot;输入自定义issue前缀 :&quot;,</span>
      <span class="token comment">// footer: &quot;列举关联issue (可选) 例如: #31, #I3244 :\\n&quot;,</span>
      <span class="token comment">// confirmCommit: &quot;是否提交或修改commit ?&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">types</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&quot;feat&quot;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;feat:     🚀  A new feature&quot;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">emoji</span><span class="token operator">:</span> <span class="token string">&quot;🚀&quot;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&quot;fix&quot;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;fix:      🧩  A bug fix&quot;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">emoji</span><span class="token operator">:</span> <span class="token string">&quot;🧩&quot;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&quot;docs&quot;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;docs:     📚  Documentation only changes&quot;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">emoji</span><span class="token operator">:</span> <span class="token string">&quot;📚&quot;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&quot;style&quot;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;style:    🎨  Changes that do not affect the meaning of the code&quot;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">emoji</span><span class="token operator">:</span> <span class="token string">&quot;🎨&quot;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&quot;refactor&quot;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;refactor: ♻️   A code change that neither fixes a bug nor adds a feature&quot;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">emoji</span><span class="token operator">:</span> <span class="token string">&quot;♻️&quot;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&quot;perf&quot;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;perf:     ⚡️  A code change that improves performance&quot;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">emoji</span><span class="token operator">:</span> <span class="token string">&quot;⚡️&quot;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&quot;test&quot;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;test:     ✅  Adding missing tests or correcting existing tests&quot;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">emoji</span><span class="token operator">:</span> <span class="token string">&quot;✅&quot;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&quot;build&quot;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;build:    📦️   Changes that affect the build system or external dependencies&quot;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">emoji</span><span class="token operator">:</span> <span class="token string">&quot;📦️&quot;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&quot;ci&quot;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;ci:       🎡  Changes to our CI configuration files and scripts&quot;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">emoji</span><span class="token operator">:</span> <span class="token string">&quot;🎡&quot;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&quot;chore&quot;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;chore:    🔨  Other changes that don&#39;t modify src or test files&quot;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">emoji</span><span class="token operator">:</span> <span class="token string">&quot;🔨&quot;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&quot;revert&quot;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;revert:   ⏪️  Reverts a previous commit&quot;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">emoji</span><span class="token operator">:</span> <span class="token string">&quot;⏪️&quot;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&quot;wip&quot;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;wip:      🕔  work in process&quot;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">emoji</span><span class="token operator">:</span> <span class="token string">&quot;🕔&quot;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&quot;workflow&quot;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;workflow: 📋  workflow improvements&quot;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">emoji</span><span class="token operator">:</span> <span class="token string">&quot;📋&quot;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&quot;type&quot;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;type:     🔰  type definition file changes&quot;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">emoji</span><span class="token operator">:</span> <span class="token string">&quot;🔰&quot;</span>
      <span class="token punctuation">}</span>
      <span class="token comment">// 中文版</span>
      <span class="token comment">// { value: &quot;feat&quot;, name: &quot;特性:   🚀  新增功能&quot;, emoji: &quot;🚀&quot; },</span>
      <span class="token comment">// { value: &quot;fix&quot;, name: &quot;修复:   🧩  修复缺陷&quot;, emoji: &quot;🧩&quot; },</span>
      <span class="token comment">// { value: &quot;docs&quot;, name: &quot;文档:   📚  文档变更&quot;, emoji: &quot;📚&quot; },</span>
      <span class="token comment">// { value: &quot;style&quot;, name: &quot;格式:   🎨  代码格式（不影响功能，例如空格、分号等格式修正）&quot;, emoji: &quot;🎨&quot; },</span>
      <span class="token comment">// { value: &quot;refactor&quot;, name: &quot;重构:   ♻️  代码重构（不包括 bug 修复、功能新增）&quot;, emoji: &quot;♻️&quot; },</span>
      <span class="token comment">// { value: &quot;perf&quot;, name: &quot;性能:    ⚡️  性能优化&quot;, emoji: &quot;⚡️&quot; },</span>
      <span class="token comment">// { value: &quot;test&quot;, name: &quot;测试:   ✅  添加疏漏测试或已有测试改动&quot;, emoji: &quot;✅&quot; },</span>
      <span class="token comment">// { value: &quot;build&quot;, name: &quot;构建:   📦️  构建流程、外部依赖变更（如升级 npm 包、修改 webpack 配置等）&quot;, emoji: &quot;📦️&quot; },</span>
      <span class="token comment">// { value: &quot;ci&quot;, name: &quot;集成:   🎡  修改 CI 配置、脚本&quot;, emoji: &quot;🎡&quot; },</span>
      <span class="token comment">// { value: &quot;chore&quot;, name: &quot;回退:   ⏪️  回滚 commit&quot;, emoji: &quot;⏪️&quot; },</span>
      <span class="token comment">// { value: &quot;revert&quot;, name: &quot;其他:   🔨  对构建过程或辅助工具和库的更改（不影响源文件、测试用例）&quot;, emoji: &quot;🔨&quot; },</span>
      <span class="token comment">// { value: &quot;wip&quot;, name: &quot;开发:   🕔  正在开发中&quot;, emoji: &quot;🕔&quot; },</span>
      <span class="token comment">// { value: &quot;workflow&quot;, name: &quot;工作流:   📋  工作流程改进&quot;, emoji: &quot;📋&quot; },</span>
      <span class="token comment">// { value: &quot;types&quot;, name: &quot;类型:   🔰  类型定义文件修改&quot;, emoji: &quot;🔰&quot; }</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token literal-property property">useEmoji</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token literal-property property">scopes</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token operator">...</span>scopes<span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token literal-property property">customScopesAlign</span><span class="token operator">:</span> <span class="token string">&quot;bottom&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">emptyScopesAlias</span><span class="token operator">:</span> <span class="token string">&quot;empty&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">customScopesAlias</span><span class="token operator">:</span> <span class="token string">&quot;custom&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">allowBreakingChanges</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;feat&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;fix&quot;</span><span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="四、配置-package-json-命令" tabindex="-1"><a class="header-anchor" href="#四、配置-package-json-命令" aria-hidden="true">#</a> 四、配置 package.json 命令</h2><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token comment">// 本地运行(dev环境)</span>
    <span class="token property">&quot;dev&quot;</span><span class="token operator">:</span> <span class="token string">&quot;vite&quot;</span><span class="token punctuation">,</span>
    <span class="token comment">// 本地运行(dev环境)</span>
    <span class="token property">&quot;serve&quot;</span><span class="token operator">:</span> <span class="token string">&quot;vite&quot;</span><span class="token punctuation">,</span>
    <span class="token comment">// 构建打包(dev环境)</span>
    <span class="token property">&quot;build:dev&quot;</span><span class="token operator">:</span> <span class="token string">&quot;vue-tsc &amp;&amp; vite build --mode development&quot;</span><span class="token punctuation">,</span>
    <span class="token comment">// 构建打包(test环境)</span>
    <span class="token property">&quot;build:test&quot;</span><span class="token operator">:</span> <span class="token string">&quot;vue-tsc &amp;&amp; vite build --mode test&quot;</span><span class="token punctuation">,</span>
    <span class="token comment">// 构建打包(pro环境)</span>
    <span class="token property">&quot;build:pro&quot;</span><span class="token operator">:</span> <span class="token string">&quot;vue-tsc &amp;&amp; vite build --mode production&quot;</span><span class="token punctuation">,</span>
    <span class="token comment">// 检查项目 ts 类型</span>
    <span class="token property">&quot;type:check&quot;</span><span class="token operator">:</span> <span class="token string">&quot;vue-tsc --noEmit --skipLibCheck&quot;</span><span class="token punctuation">,</span>
    <span class="token comment">// 本地环境预览构建后的 dist</span>
    <span class="token property">&quot;preview&quot;</span><span class="token operator">:</span> <span class="token string">&quot;npm run build:dev &amp;&amp; vite preview&quot;</span><span class="token punctuation">,</span>
    <span class="token comment">// 执行 eslint 校验</span>
    <span class="token property">&quot;lint:eslint&quot;</span><span class="token operator">:</span> <span class="token string">&quot;eslint --fix --ext .js,.ts,.vue ./src&quot;</span><span class="token punctuation">,</span>
    <span class="token comment">// 执行 prettier 格式化</span>
    <span class="token property">&quot;lint:prettier&quot;</span><span class="token operator">:</span> <span class="token string">&quot;prettier --write \\&quot;src/**/*.{js,ts,json,tsx,css,less,scss,vue,html,md}\\&quot;&quot;</span><span class="token punctuation">,</span>
    <span class="token comment">// 执行 stylelint 格式化</span>
    <span class="token property">&quot;lint:stylelint&quot;</span><span class="token operator">:</span> <span class="token string">&quot;stylelint --cache --fix \\&quot;**/*.{vue,less,postcss,css,scss}\\&quot; --cache --cache-location node_modules/.cache/stylelint/&quot;</span><span class="token punctuation">,</span>
    <span class="token comment">// 执行 lint-staged.config.js 文件下的命令</span>
    <span class="token property">&quot;lint:lint-staged&quot;</span><span class="token operator">:</span> <span class="token string">&quot;lint-staged&quot;</span><span class="token punctuation">,</span>
    <span class="token comment">// 初始化 husky 配置</span>
    <span class="token property">&quot;prepare&quot;</span><span class="token operator">:</span> <span class="token string">&quot;husky install&quot;</span><span class="token punctuation">,</span>
    <span class="token comment">// 自动更新版本</span>
    <span class="token property">&quot;release&quot;</span><span class="token operator">:</span> <span class="token string">&quot;standard-version&quot;</span><span class="token punctuation">,</span>
    <span class="token comment">// 提交代码(可自定义配置执行命令)</span>
    <span class="token property">&quot;commit&quot;</span><span class="token operator">:</span> <span class="token string">&quot;git add -A &amp;&amp; czg &amp;&amp; git push&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;preinstall&quot;</span><span class="token operator">:</span> <span class="token string">&quot;npx only-allow pnpm&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="五、项目集成" tabindex="-1"><a class="header-anchor" href="#五、项目集成" aria-hidden="true">#</a> 五、项目集成</h2><h3 id="_1-src别名的配置" tabindex="-1"><a class="header-anchor" href="#_1-src别名的配置" aria-hidden="true">#</a> 1.src别名的配置</h3><p>在开发项目的时候文件与文件关系可能很复杂，因此我们需要给src文件夹配置一个别名！！！</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// vite.config.ts</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span>defineConfig<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vite&#39;</span>
<span class="token keyword">import</span> vue <span class="token keyword">from</span> <span class="token string">&#39;@vitejs/plugin-vue&#39;</span>
<span class="token keyword">import</span> path <span class="token keyword">from</span> <span class="token string">&#39;path&#39;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    plugins<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token function">vue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    resolve<span class="token operator">:</span> <span class="token punctuation">{</span>
        alias<span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token string-property property">&quot;@&quot;</span><span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;./src&quot;</span><span class="token punctuation">)</span> <span class="token comment">// 相对路径别名配置，使用 @ 代替 src</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>TypeScript 编译配置</strong></p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token comment">// tsconfig.json</span>
<span class="token punctuation">{</span>
  <span class="token property">&quot;compilerOptions&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;baseUrl&quot;</span><span class="token operator">:</span> <span class="token string">&quot;./&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 解析非相对模块的基地址，默认是当前目录</span>
    <span class="token property">&quot;paths&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token comment">//路径映射，相对于baseUrl</span>
      <span class="token property">&quot;@/*&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;src/*&quot;</span><span class="token punctuation">]</span> 
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-环境变量的配置" tabindex="-1"><a class="header-anchor" href="#_2-环境变量的配置" aria-hidden="true">#</a> 2.环境变量的配置</h3><p><strong>项目开发过程中，至少会经历开发环境、测试环境和生产环境(即正式环境)三个阶段。不同阶段请求的状态(如接口地址等)不尽相同，若手动切换接口地址是相当繁琐且易出错的。于是环境变量配置的需求就应运而生，我们只需做简单的配置，把环境状态切换的工作交给代码。</strong></p><p>开发环境（development） 顾名思义，开发使用的环境，每位开发人员在自己的dev分支上干活，开发到一定程度，同事会合并代码，进行联调。</p><p>测试环境（testing） 测试同事干活的环境啦，一般会由测试同事自己来部署，然后在此环境进行测试</p><p>生产环境（production） 生产环境是指正式提供对外服务的，一般会关掉错误报告，打开错误日志。(正式提供给客户使用的环境。)</p><p>注意:一般情况下，一个环境对应一台服务器,也有的公司开发与测试环境是一台服务器！！！</p><p>项目根目录分别添加 开发、生产和测试环境的文件!</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>.env.development
.env.production
.env.test
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>文件内容</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code># 变量必须以 VITE_ 为前缀才能暴露给外部读取
NODE_ENV = &#39;development&#39;
VITE_APP_TITLE = &#39;开发&#39;
VITE_APP_BASE_API = &#39;/dev-api&#39;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>NODE_ENV = &#39;production&#39;
VITE_APP_TITLE = &#39;生产&#39;
VITE_APP_BASE_API = &#39;/prod-api&#39;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code># 变量必须以 VITE_ 为前缀才能暴露给外部读取
NODE_ENV = &#39;test&#39;
VITE_APP_TITLE = &#39;测试&#39;
VITE_APP_BASE_API = &#39;/test-api&#39;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>配置运行命令：package.json</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code> <span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;dev&quot;</span><span class="token operator">:</span> <span class="token string">&quot;vite --open&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;build:test&quot;</span><span class="token operator">:</span> <span class="token string">&quot;vue-tsc &amp;&amp; vite build --mode test&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;build:pro&quot;</span><span class="token operator">:</span> <span class="token string">&quot;vue-tsc &amp;&amp; vite build --mode production&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;preview&quot;</span><span class="token operator">:</span> <span class="token string">&quot;vite preview&quot;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>通过i<wbr>mport.meta.env获取环境变量</p><h3 id="_3-svg图标配置" tabindex="-1"><a class="header-anchor" href="#_3-svg图标配置" aria-hidden="true">#</a> 3.SVG图标配置</h3><p>在开发项目的时候经常会用到svg矢量图,而且我们使用SVG以后，页面上加载的不再是图片资源,</p><p>这对页面性能来说是个很大的提升，而且我们SVG文件比img要小的很多，放在项目中几乎不占用资源。</p><p><strong>安装SVG依赖插件</strong></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>pnpm install vite-plugin-svg-icons -D
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>在 <code>vite.config.ts</code>中配置插件</strong></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> createSvgIconsPlugin <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vite-plugin-svg-icons&#39;</span>
<span class="token keyword">import</span> path <span class="token keyword">from</span> <span class="token string">&#39;path&#39;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    plugins<span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token function">createSvgIconsPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token comment">// Specify the icon folder to be cached</span>
        iconDirs<span class="token operator">:</span> <span class="token punctuation">[</span>path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span><span class="token function">cwd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;src/assets/icons&#39;</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token comment">// Specify symbolId format</span>
        symbolId<span class="token operator">:</span> <span class="token string">&#39;icon-[dir]-[name]&#39;</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>入口文件导入</strong></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>import &#39;virtual:svg-icons-register&#39;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_3-1-svg封装为全局组件" tabindex="-1"><a class="header-anchor" href="#_3-1-svg封装为全局组件" aria-hidden="true">#</a> 3.1.svg封装为全局组件</h4><p>因为项目很多模块需要使用图标,因此把它封装为全局组件！！！</p><p><strong>在src/components目录下创建一个SvgIcon组件:代表如下</strong></p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span> <span class="token attr-name">:style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{ width: width, height: height }<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>use</span> <span class="token attr-name">:xlink:href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>prefix + name<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:fill</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>color<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>use</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token function">defineProps</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token comment">//xlink:href属性值的前缀</span>
  <span class="token literal-property property">prefix</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">type</span><span class="token operator">:</span> String<span class="token punctuation">,</span>
    <span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">&#39;#icon-&#39;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">//svg矢量图的名字</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> String<span class="token punctuation">,</span>
  <span class="token comment">//svg图标的颜色</span>
  <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">type</span><span class="token operator">:</span> String<span class="token punctuation">,</span>
    <span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">//svg宽度</span>
  <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">type</span><span class="token operator">:</span> String<span class="token punctuation">,</span>
    <span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">&#39;16px&#39;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">//svg高度</span>
  <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">type</span><span class="token operator">:</span> String<span class="token punctuation">,</span>
    <span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">&#39;16px&#39;</span>
  <span class="token punctuation">}</span>

<span class="token punctuation">}</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">scoped</span><span class="token punctuation">&gt;</span></span><span class="token style"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在src文件夹目录下创建一个index.ts文件：用于注册components文件夹内部全部全局组件！！！</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> SvgIcon <span class="token keyword">from</span> <span class="token string">&#39;./SvgIcon/index.vue&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token keyword">type</span> <span class="token punctuation">{</span> App<span class="token punctuation">,</span> Component <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> components<span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token punctuation">[</span>name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token operator">:</span> Component <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token punctuation">{</span> SvgIcon <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
    <span class="token function">install</span><span class="token punctuation">(</span>app<span class="token operator">:</span> App<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>components<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>key<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            app<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> components<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在入口文件引入src/index.ts文件,通过app.use方法安装自定义插件</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>import gloablComponent from &#39;./components/index&#39;;
app.use(gloablComponent);
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-集成sass" tabindex="-1"><a class="header-anchor" href="#_5-集成sass" aria-hidden="true">#</a> 5.集成sass</h3><p>我们目前在组件内部已经可以使用scss样式,因为在配置styleLint工具的时候，项目当中已经安装过sass sass-loader,因此我们再组件内可以使用scss语法！！！需要加上lang=&quot;scss&quot;</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&lt;style scoped lang=&quot;scss&quot;&gt;&lt;/style&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>接下来我们为项目添加一些全局的样式</p><p>在src/styles目录下创建一个index.scss文件，当然项目中需要用到清除默认样式，因此在index.scss引入reset.scss</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>@import reset.scss
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>在入口文件引入</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>import &#39;@/styles&#39;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>但是你会发现在src/styles/index.scss全局样式文件中没有办法使用$变量.因此需要给项目中引入全局变量$.</p><p>在style/variable.scss创建一个variable.scss文件！</p><p>在vite.config.ts文件配置如下:</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineConfig</span><span class="token punctuation">(</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
	css<span class="token operator">:</span> <span class="token punctuation">{</span>
      preprocessorOptions<span class="token operator">:</span> <span class="token punctuation">{</span>
        scss<span class="token operator">:</span> <span class="token punctuation">{</span>
          javascriptEnabled<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
          additionalData<span class="token operator">:</span> <span class="token string">&#39;@import &quot;./src/styles/variable.scss&quot;;&#39;</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong><code>@import &quot;./src/styles/variable.less&quot;;</code>后面的 <code>;</code>不要忘记，不然会报错</strong>!</p><p>配置完毕你会发现scss提供这些全局变量可以在组件样式中使用了！！！</p><h3 id="_6-mock数据" tabindex="-1"><a class="header-anchor" href="#_6-mock数据" aria-hidden="true">#</a> 6.mock数据</h3><p>安装依赖:https://www.npmjs.com/package/vite-plugin-mock</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">pnpm</span> <span class="token function">install</span> <span class="token parameter variable">-D</span> vite-plugin-mock mockjs
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>在 vite.config.js 配置文件启用插件。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> UserConfigExport<span class="token punctuation">,</span> ConfigEnv <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vite&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> viteMockServe <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vite-plugin-mock&#39;</span>
<span class="token keyword">import</span> vue <span class="token keyword">from</span> <span class="token string">&#39;@vitejs/plugin-vue&#39;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> command <span class="token punctuation">}</span></span><span class="token punctuation">)</span><span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token function">vue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token function">viteMockServe</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">localEnabled</span><span class="token operator">:</span> command <span class="token operator">===</span> <span class="token string">&#39;serve&#39;</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在根目录创建mock文件夹:去创建我们需要mock数据与接口！！！</p><p>在mock文件夹内部创建一个user.ts文件</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">//用户信息数据</span>
<span class="token keyword">function</span> <span class="token function">createUserList</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">[</span>
        <span class="token punctuation">{</span>
            userId<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
            avatar<span class="token operator">:</span>
                <span class="token string">&#39;https://wpimg.wallstcn.com/f778738c-e4f8-4870-b634-56703b4acafe.gif&#39;</span><span class="token punctuation">,</span>
            username<span class="token operator">:</span> <span class="token string">&#39;admin&#39;</span><span class="token punctuation">,</span>
            password<span class="token operator">:</span> <span class="token string">&#39;111111&#39;</span><span class="token punctuation">,</span>
            desc<span class="token operator">:</span> <span class="token string">&#39;平台管理员&#39;</span><span class="token punctuation">,</span>
            roles<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;平台管理员&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
            buttons<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;cuser.detail&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
            routes<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;home&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
            token<span class="token operator">:</span> <span class="token string">&#39;Admin Token&#39;</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span>
            userId<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
            avatar<span class="token operator">:</span>
                <span class="token string">&#39;https://wpimg.wallstcn.com/f778738c-e4f8-4870-b634-56703b4acafe.gif&#39;</span><span class="token punctuation">,</span>
            username<span class="token operator">:</span> <span class="token string">&#39;system&#39;</span><span class="token punctuation">,</span>
            password<span class="token operator">:</span> <span class="token string">&#39;111111&#39;</span><span class="token punctuation">,</span>
            desc<span class="token operator">:</span> <span class="token string">&#39;系统管理员&#39;</span><span class="token punctuation">,</span>
            roles<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;系统管理员&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
            buttons<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;cuser.detail&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;cuser.user&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
            routes<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;home&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
            token<span class="token operator">:</span> <span class="token string">&#39;System Token&#39;</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">[</span>
    <span class="token comment">// 用户登录接口</span>
    <span class="token punctuation">{</span>
        url<span class="token operator">:</span> <span class="token string">&#39;/api/user/login&#39;</span><span class="token punctuation">,</span><span class="token comment">//请求地址</span>
        method<span class="token operator">:</span> <span class="token string">&#39;post&#39;</span><span class="token punctuation">,</span><span class="token comment">//请求方式</span>
        <span class="token function-variable function">response</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> body <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token comment">//获取请求体携带过来的用户名与密码</span>
            <span class="token keyword">const</span> <span class="token punctuation">{</span> username<span class="token punctuation">,</span> password <span class="token punctuation">}</span> <span class="token operator">=</span> body<span class="token punctuation">;</span>
            <span class="token comment">//调用获取用户信息函数,用于判断是否有此用户</span>
            <span class="token keyword">const</span> checkUser <span class="token operator">=</span> <span class="token function">createUserList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span>
                <span class="token punctuation">(</span>item<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> item<span class="token punctuation">.</span>username <span class="token operator">===</span> username <span class="token operator">&amp;&amp;</span> item<span class="token punctuation">.</span>password <span class="token operator">===</span> password<span class="token punctuation">,</span>
            <span class="token punctuation">)</span>
            <span class="token comment">//没有用户返回失败信息</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>checkUser<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token punctuation">{</span> code<span class="token operator">:</span> <span class="token number">201</span><span class="token punctuation">,</span> data<span class="token operator">:</span> <span class="token punctuation">{</span> message<span class="token operator">:</span> <span class="token string">&#39;账号或者密码不正确&#39;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            <span class="token comment">//如果有返回成功信息</span>
            <span class="token keyword">const</span> <span class="token punctuation">{</span> token <span class="token punctuation">}</span> <span class="token operator">=</span> checkUser
            <span class="token keyword">return</span> <span class="token punctuation">{</span> code<span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span> data<span class="token operator">:</span> <span class="token punctuation">{</span> token <span class="token punctuation">}</span> <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token comment">// 获取用户信息</span>
    <span class="token punctuation">{</span>
        url<span class="token operator">:</span> <span class="token string">&#39;/api/user/info&#39;</span><span class="token punctuation">,</span>
        method<span class="token operator">:</span> <span class="token string">&#39;get&#39;</span><span class="token punctuation">,</span>
        <span class="token function-variable function">response</span><span class="token operator">:</span> <span class="token punctuation">(</span>request<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token comment">//获取请求头携带token</span>
            <span class="token keyword">const</span> token <span class="token operator">=</span> request<span class="token punctuation">.</span>headers<span class="token punctuation">.</span>token<span class="token punctuation">;</span>
            <span class="token comment">//查看用户信息是否包含有次token用户</span>
            <span class="token keyword">const</span> checkUser <span class="token operator">=</span> <span class="token function">createUserList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> item<span class="token punctuation">.</span>token <span class="token operator">===</span> token<span class="token punctuation">)</span>
            <span class="token comment">//没有返回失败的信息</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>checkUser<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token punctuation">{</span> code<span class="token operator">:</span> <span class="token number">201</span><span class="token punctuation">,</span> data<span class="token operator">:</span> <span class="token punctuation">{</span> message<span class="token operator">:</span> <span class="token string">&#39;获取用户信息失败&#39;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            <span class="token comment">//如果有返回成功信息</span>
            <span class="token keyword">return</span> <span class="token punctuation">{</span> code<span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span> data<span class="token operator">:</span> <span class="token punctuation">{</span>checkUser<span class="token punctuation">}</span> <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>安装axios</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">pnpm</span> <span class="token function">install</span> axios
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>最后通过axios测试接口！！！</p><h3 id="_7-axios二次封装" tabindex="-1"><a class="header-anchor" href="#_7-axios二次封装" aria-hidden="true">#</a> 7.axios二次封装</h3><p>在开发项目的时候避免不了与后端进行交互,因此我们需要使用axios插件实现发送网络请求。在开发项目的时候</p><p>我们经常会把axios进行二次封装。</p><p>目的:</p><p>1:使用请求拦截器，可以在请求拦截器中处理一些业务(开始进度条、请求头携带公共参数)</p><p>2:使用响应拦截器，可以在响应拦截器中处理一些业务(进度条结束、简化服务器返回的数据、处理http网络错误)</p><p>在根目录下创建utils/request.ts</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> axios <span class="token keyword">from</span> <span class="token string">&quot;axios&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> ElMessage <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;element-plus&quot;</span><span class="token punctuation">;</span>
<span class="token comment">//创建axios实例</span>
<span class="token keyword">let</span> request <span class="token operator">=</span> axios<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    baseURL<span class="token operator">:</span> <span class="token keyword">import</span><span class="token punctuation">.</span>meta<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">VITE_APP_BASE_API</span><span class="token punctuation">,</span>
    timeout<span class="token operator">:</span> <span class="token number">5000</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">//请求拦截器</span>
request<span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>request<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>config <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> config<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//响应拦截器</span>
request<span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>response<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> response<span class="token punctuation">.</span>data<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">//处理网络错误</span>
    <span class="token keyword">let</span> msg <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> status <span class="token operator">=</span> error<span class="token punctuation">.</span>response<span class="token punctuation">.</span>status<span class="token punctuation">;</span>
    <span class="token keyword">switch</span> <span class="token punctuation">(</span>status<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">case</span> <span class="token number">401</span><span class="token operator">:</span>
            msg <span class="token operator">=</span> <span class="token string">&quot;token过期&quot;</span><span class="token punctuation">;</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token keyword">case</span> <span class="token number">403</span><span class="token operator">:</span>
            msg <span class="token operator">=</span> <span class="token string">&#39;无权访问&#39;</span><span class="token punctuation">;</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token keyword">case</span> <span class="token number">404</span><span class="token operator">:</span>
            msg <span class="token operator">=</span> <span class="token string">&quot;请求地址错误&quot;</span><span class="token punctuation">;</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token keyword">case</span> <span class="token number">500</span><span class="token operator">:</span>
            msg <span class="token operator">=</span> <span class="token string">&quot;服务器出现问题&quot;</span><span class="token punctuation">;</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token keyword">default</span><span class="token operator">:</span>
            msg <span class="token operator">=</span> <span class="token string">&quot;无网络&quot;</span><span class="token punctuation">;</span>

    <span class="token punctuation">}</span>
    <span class="token function">ElMessage</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        type<span class="token operator">:</span> <span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span>
        message<span class="token operator">:</span> msg
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token builtin">Promise</span><span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> request<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_8-api接口统一管理" tabindex="-1"><a class="header-anchor" href="#_8-api接口统一管理" aria-hidden="true">#</a> 8.API接口统一管理</h3><p>在开发项目的时候,接口可能很多需要统一管理。在src目录下去创建api文件夹去统一管理项目的接口；</p><p>比如:下面方式</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">//统一管理咱们项目用户相关的接口</span>

<span class="token keyword">import</span> request <span class="token keyword">from</span> <span class="token string">&#39;@/utils/request&#39;</span>

<span class="token keyword">import</span> <span class="token keyword">type</span> <span class="token punctuation">{</span>

 loginFormData<span class="token punctuation">,</span>

 loginResponseData<span class="token punctuation">,</span>

 userInfoReponseData<span class="token punctuation">,</span>

<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./type&#39;</span>

<span class="token comment">//项目用户相关的请求地址</span>

<span class="token keyword">enum</span> <span class="token constant">API</span> <span class="token punctuation">{</span>

 <span class="token constant">LOGIN_URL</span> <span class="token operator">=</span> <span class="token string">&#39;/admin/acl/index/login&#39;</span><span class="token punctuation">,</span>

 <span class="token constant">USERINFO_URL</span> <span class="token operator">=</span> <span class="token string">&#39;/admin/acl/index/info&#39;</span><span class="token punctuation">,</span>

 <span class="token constant">LOGOUT_URL</span> <span class="token operator">=</span> <span class="token string">&#39;/admin/acl/index/logout&#39;</span><span class="token punctuation">,</span>

<span class="token punctuation">}</span>
<span class="token comment">//登录接口</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">reqLogin</span> <span class="token operator">=</span> <span class="token punctuation">(</span>data<span class="token operator">:</span> loginFormData<span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
 request<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">post</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token punctuation">,</span> loginResponseData<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token constant">API</span><span class="token punctuation">.</span><span class="token constant">LOGIN_URL</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span>
<span class="token comment">//获取用户信息</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">reqUserInfo</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>

 request<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">get</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token punctuation">,</span> userInfoReponseData<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token constant">API</span><span class="token punctuation">.</span><span class="token constant">USERINFO_URL</span><span class="token punctuation">)</span>

<span class="token comment">//退出登录</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">reqLogout</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> request<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">post</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token punctuation">,</span> <span class="token builtin">any</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token constant">API</span><span class="token punctuation">.</span><span class="token constant">LOGOUT_URL</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_9-集成element-plus" tabindex="-1"><a class="header-anchor" href="#_9-集成element-plus" aria-hidden="true">#</a> 9.集成element-plus</h3><p>官网地址:https://element-plus.gitee.io/zh-CN/</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">pnpm</span> <span class="token function">install</span> element-plus @element-plus/icons-vue
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>完整引入</strong></p><p><strong>入口文件main.ts全局安装element-plus,element-plus默认支持语言英语设置为中文</strong></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> ElementPlus <span class="token keyword">from</span> <span class="token string">&#39;element-plus&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token string">&#39;element-plus/dist/index.css&#39;</span>
<span class="token comment">//@ts-ignore忽略当前文件ts类型的检测否则有红色提示(打包会失败)</span>
<span class="token keyword">import</span> zhCn <span class="token keyword">from</span> <span class="token string">&#39;element-plus/dist/locale/zh-cn.mjs&#39;</span>
app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>ElementPlus<span class="token punctuation">,</span> <span class="token punctuation">{</span>
    locale<span class="token operator">:</span> zhCn
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Element Plus全局组件类型声明</strong></p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token comment">// tsconfig.json</span>
<span class="token punctuation">{</span>
  <span class="token property">&quot;compilerOptions&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
    <span class="token property">&quot;types&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;element-plus/global&quot;</span><span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>配置完毕可以测试element-plus组件与图标的使用.</p><p><strong>按需引入</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">pnpm</span> <span class="token function">install</span> <span class="token parameter variable">-D</span> unplugin-vue-components unplugin-auto-import
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>vite</strong></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// vite.config.ts</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> defineConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vite&#39;</span>
<span class="token keyword">import</span> AutoImport <span class="token keyword">from</span> <span class="token string">&#39;unplugin-auto-import/vite&#39;</span>
<span class="token keyword">import</span> Components <span class="token keyword">from</span> <span class="token string">&#39;unplugin-vue-components/vite&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> ElementPlusResolver <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;unplugin-vue-components/resolvers&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
  plugins<span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token comment">// ...</span>
    <span class="token function">AutoImport</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      resolvers<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token function">ElementPlusResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">Components</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      resolvers<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token function">ElementPlusResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>webpack</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// webpack.config.js</span>
<span class="token keyword">const</span> AutoImport <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;unplugin-auto-import/webpack&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> Components <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;unplugin-vue-components/webpack&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> ElementPlusResolver <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;unplugin-vue-components/resolvers&#39;</span><span class="token punctuation">)</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token function">AutoImport</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">resolvers</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token function">ElementPlusResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">Components</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">resolvers</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token function">ElementPlusResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意按需引入也需要引入样式文件</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token string">&#39;element-plus/dist/index.css&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,163);function m(b,g){const a=o("ExternalLinkIcon");return i(),l("div",null,[r,s("p",null,[n("本文参考："),s("a",u,[n("参考文档"),t(a)])]),s("p",null,[s("a",d,[n("Geeker Admin"),t(a)]),n(" 一款基于 Vue3.3、TypeScript、Vite3、Pinia、Element-Plus 开源的后台管理框架，使用目前最新技术栈开发。项目提供强大的 "),s("a",k,[n("ProTable"),t(a)]),n(" 组件，在一定程度上节省您的开发效率。另外本项目还封装了一些常用组件、hooks、指令、动态路由、按钮级别权限控制等功能。")]),v])}const y=p(c,[["render",m],["__file","vue3.html.vue"]]);export{y as default};
